# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pr:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'

steps:

# DOTNET CLI

# - task: DotNetCoreCLI@2
#   displayName: DotNet Restore
#   inputs:
#     command: restore
#     projects: '**/*.csproj'
# - task: DotNetCoreCLI@2
#   displayName: DotNet Build
#   inputs:
#     command: build
#     projects: '**/*.csproj'
#     arguments: '--configuration $(buildConfiguration)'
# - task: DotNetCoreCLI@2
#   displayName: DotNet Test
#   inputs:
#     command: test
#     projects: '**/*Tests/*.csproj'
#     arguments: '--configuration $(buildConfiguration) --logger trx'
# - task: PublishTestResults@2
#   displayName: DotNet Test Publish
#   inputs:
#     testRunner: VSTest
#     testResultsFiles: '$(Agent.TempDirectory)/*.trx'
# - task: Docker@1
#   displayName: 'Docker Build'
#   inputs:
#     azureSubscriptionEndpoint: 'mstyacontainerregistry'
#     azureContainerRegistry: mstyacontainerregistry.azurecr.io


# DOCKER HUB
# - task: Docker@1
#   displayName: 'Build an image'
#   inputs:
#     imageName: '$(Build.Repository.Name):$(Build.BuildId)'
#     containerregistrytype: 'Container Registry'
#     dockerRegistryEndpoint: DockerRegistryConnection
# - bash: |
#     docker tag $(Build.Repository.Name):$(Build.BuildId) $(Build.Repository.Name):latest
# - task: Docker@1
#   displayName: Login
#   inputs:
#     containerregistrytype: 'Container Registry'
#     dockerRegistryEndpoint: DockerRegistryConnection
#     command: login
# - task: Docker@1
#   displayName: 'Push an image'
#   inputs:
#     command: 'Push an image'
#     imageName: '$(Build.Repository.Name):$(Build.BuildId)'
#     includeLatestTag: true
# - task: Docker@1
#   displayName: 'Push a latest image'
#   inputs:
#     command: 'Push an image'
#     imageName: '$(Build.Repository.Name):latest'

# AZURE CONTAINER REGISTRY
# - task: Docker@1
#   displayName: 'Build an image'
#   inputs:
#     imageName: '$(Build.Repository.Name):$(Build.BuildId)'
# - task: Docker@1
#   displayName: Login
#   inputs:
#     azureSubscriptionEndpoint: 'AzureConnection'
#     azureContainerRegistry: mstyacontainerregistry.azurecr.io
#     command: login
# - task: Docker@1
#   displayName: 'Push an image'
#   inputs:
#     command: 'Push an image'
#     imageName: '$(Build.Repository.Name):$(Build.BuildId)'
- task: Docker@1
  displayName: Login
  inputs:
    azureSubscriptionEndpoint: 'AzureConnection'
    azureContainerRegistry: mstyacontainerregistry.azurecr.io
    command: login
- bash: |
   # Write your commands here
   # Use the environment variables input below to pass secret variables to this script
   # ls $(Build.Repository.LocalPath)
   # echo $(Build.Repository.LocalPath)/Numbertrivia/Api/
   docker build -t $(Build.Repository.Name):$(Build.BuildId) -t $(Build.Repository.Name):latest -f $(Build.Repository.LocalPath)/Numbertrivia/Api/ .
   # docker push $(Build.Repository.Name):$(Build.BuildId)